// <auto-generated />
using System;
using BowlHub.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BowlHub.DAL.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    partial class DataBaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BowlHub.DAL.Entities.BoardEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("ColumnCount")
                        .HasColumnType("integer");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("PlaceId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("PlaceId");

                    b.ToTable("Boards");
                });

            modelBuilder.Entity("BowlHub.DAL.Entities.PlaceEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AdminPhone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("Name");

                    b.ToTable("Places");
                });

            modelBuilder.Entity("BowlHub.DAL.Entities.ReservationEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BoardId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ColumnNum")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateReservation")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FromReservation")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("TillReservation")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("BoardId");

                    b.HasIndex("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("BowlHub.DAL.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BowlHub.DAL.Entities.BoardEntity", b =>
                {
                    b.HasOne("BowlHub.DAL.Entities.PlaceEntity", "Place")
                        .WithMany("Boards")
                        .HasForeignKey("PlaceId")
                        .IsRequired();

                    b.Navigation("Place");
                });

            modelBuilder.Entity("BowlHub.DAL.Entities.ReservationEntity", b =>
                {
                    b.HasOne("BowlHub.DAL.Entities.BoardEntity", "Board")
                        .WithMany("Reservations")
                        .HasForeignKey("BoardId")
                        .IsRequired();

                    b.HasOne("BowlHub.DAL.Entities.UserEntity", "User")
                        .WithMany("Reservations")
                        .HasForeignKey("UserId")
                        .IsRequired();

                    b.Navigation("Board");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BowlHub.DAL.Entities.BoardEntity", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("BowlHub.DAL.Entities.PlaceEntity", b =>
                {
                    b.Navigation("Boards");
                });

            modelBuilder.Entity("BowlHub.DAL.Entities.UserEntity", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}

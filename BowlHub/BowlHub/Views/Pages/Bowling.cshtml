@model BowlHub.DTOs.BoardDto 
@{
    Layout = "_Layout";
    ViewData["Title"] = "Board"; 
}

@section Imports
{
    <link rel="stylesheet" type="text/css" href="~/css/bowling.css" asp-append-version="true">
    <script src="~/js/global.js" asp-append-version="true"></script>
    <script src="~/js/board.js" asp-append-version="true"></script>
}

@section HeaderBtns
{
    <a href="/places">
        <input type="button" class="button" value="Back to places">
    </a>
    <a href="/auth/login">
        <input type="button" class="button" value="Log in"/>
    </a>
    <a href="/auth/signup">
        <input type="button" class="button" value="Sign up"/>
    </a>
    <input id="logoutBtn" type="button" class="button" value="Log out" onclick="userLogout()"/>
}

<div class="main-content lines-container">
    <div class="lines-control">
        Bowling lines
    </div>
    @for (var i = 1; i <= Model.ColumnCount; i++)
    {
        <div class="bowling-line disable-selection" data-line-id="@i" onclick="getTimeInfo(@i, this)">Line @i</div>
    }
</div>
<div class="main-content time-info-container">
    <div class="time-info-header">
        Free | Busy
        <br>
        reservation time
    </div>
    <div id="time-containers" class="disable-selection"></div>
</div>
<div class="main-content">
    <div class="reservation-header">
        <div class="time-controller">
            <input id="start-time-input" type="range" min="@Model.StartTime" max="@Model.EndTime" step="15"
                   oninput="updateTime(this.value, 'start-time'); updateDurationTime(this.value, @Model.EndTime)" value="@Model.StartTime">
            <p>Start: <span id="start-time"></span></p>
            <input id="duration-time-input" type="range" min="0" max="@(Model.EndTime-Model.StartTime)" step="15"
                   oninput="updateTime(this.value, 'duration-time'); updateStartTime(this.value, @Model.EndTime)" value="60">
            <p>Duration: <span id="duration-time">01:00</span></p>
        </div>
        <div class="time-controller" style="display: flex; justify-content: right">
            <input id="reserv-date-input" type="date" class="date-picker" onchange="getTimeInfo(getLineId(), document.body.querySelector(`.bowling-line[data-line-id='${getLineId()}']`))">
        </div>
    </div>
    <input type="button" value="Reservate" onclick="showPayMenu()">
    <p class="error-container"></p>
</div>

@section Scripts
{
    <script>
        document.addEventListener("DOMContentLoaded", function() {
            checkAuthorization()
            document.body.querySelector(".date-picker").value = new Date().toISOString().split('T')[0]
            updateTime(@Model.StartTime, 'start-time');
            
            const url = document.location.href.split('#');
            if (url.length === 1) {
                document.location.href = `${url[0]}#1`;
                getTimeInfo(1, document.body.querySelector(`.bowling-line[data-line-id="1"]`))
                return
            }
            getTimeInfo(url[1], document.body.querySelector(`.bowling-line[data-line-id="${url[1]}"]`))
        });
    </script>
}
